//! WARNING: autogenerated code for azul api version 1.0.0-alpha1

#![deny(improper_ctypes_definitions)]

#[macro_use]
extern crate alloc;
extern crate azul_core;

#[cfg(not(target_arch = "wasm32"))]
pub mod desktop;
#[cfg(target_arch = "wasm32")]
pub mod web;

// TODO: Re-enable extra after fixing API compatibility
// The extra module has API incompatibilities with the new azul-core/azul-layout APIs:
// - NodeId::from_crate_internal() / into_crate_internal() missing
// - NodeData.callbacks field is now private
// - LayoutCallbackInfo structure changed (window_id, window_state, layout_window_ptr removed)
// - RefAny::default() not available
// pub mod extra;

pub mod str;

pub mod azul_impl {
    #[cfg(target_arch = "wasm32")]
    pub use self::web::*;
    #[cfg(not(target_arch = "wasm32"))]
    pub use super::desktop::*;
}

#[cfg(all(
    feature = "python-extension",
    feature = "link-dynamic",
    not(feature = "link-static")
))]
pub mod python;

// TODO: Re-enable widgets after fixing API compatibility
// The widgets module has similar API incompatibilities as extra:
// - NodeId::from_crate_internal() / into_crate_internal() usage throughout
// - Direct NodeData.callbacks field access (now private, use accessors)
// - LayoutCallbackInfo API changes
// - ExternalSystemCallbacks::default() -> ::rust_internal()
// Total errors: ~68 across all widget implementations
// pub mod widgets;

